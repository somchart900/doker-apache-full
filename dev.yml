
services:
  apache:
    #build:
    #   context: .
    #   dockerfile: Dockerfile
    image: somchart900/php:8.4-apache
    container_name: apache
    ports:
      - "8000:80"
    volumes:
      - project:/var/www/html
      - ./apache/apache.conf:/etc/apache2/sites-enabled/000-default.conf  
      # - ./apache/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini 
    depends_on:
      - mysql
      - redis
    restart: always
    environment:
      APACHE_RUN_USER: www-data
      APACHE_RUN_GROUP: www-data
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  mysql:
    image: somchart900/mysql:9.4.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql

  # cloudflare-tunnel:
  #   image: cloudflare/cloudflared:latest
  #   container_name: cloudflare-tunnel
  #   restart: always
  #   command: tunnel --no-autoupdate run --token "${CF_TUNNEL_TOKEN}"
  #   environment:
  #     TUNNEL_HOSTNAME: "${TUNNEL_HOSTNAME}"
  #     TUNNEL_URL: "http://apache:80"
  #   depends_on:
  #     - apache


  # === Redis ===
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: redis-server --save "" --appendonly no
  # ports:
  #   - "6379:6379"
    healthcheck:
       test: ["CMD", "redis-cli", "ping"]
       interval: 30s
       timeout: 10s
       retries: 5
    volumes:
      - redis_data:/data
      
volumes:
  mysql_data:
  project:
  redis_data:


